version: '3.8'
services: 
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kospi-backend
    restart: unless-stopped
    env_file:
      - .env 
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    networks:
      - kospi-network
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Data Collector (Scheduler)
  collector:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kospi-collector
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mysql
      - backend 
    command: ["npm", "run", "start:scheduler"]
    volumes:
      - ./logs:/app/logs
    networks:
      - kospi-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Frontend Web Server  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kospi-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./logs/nginx:/var/log/nginx
    networks:
      - kospi-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: kospi-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - kospi-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kospi-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kospi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  mysql_data:
  redis_data:

networks:
  kospi-network:
    driver: bridge 