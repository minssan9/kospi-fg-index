name: Backend Windows Runner (Docker Compose)

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  deploy-backend-compose:
    runs-on: Windows
    env:
      OPENSSL_CONF: ""
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
 

    - name: Check Docker status
      run: |
        echo "Checking Docker status..."
        docker --version
        docker info
        echo "Docker is running and accessible"

    - name: Navigate to backend directory
      run: |
        cd backend
        pwd
        dir

    - name: Copy environment file from root
      run: |
        echo "Copying environment file from system root..."
        if exist C:\\.env (
          copy C:\\.env backend\.env
          echo "Environment file copied from C:\\.env"
        ) else if exist D:\\.env (
          copy D:\\.env backend\.env
          echo "Environment file copied from D:\\.env"
        ) else (
          echo "No .env file found in root directories, creating default..."
          echo NODE_ENV=production > backend\.env
          echo PORT=3000 >> backend\.env
          echo DATABASE_URL=mysql://localhost:3306/kospi_fg >> backend\.env
          echo REDIS_URL=redis://localhost:6379 >> backend\.env
          echo API_KEY=local-dev-key >> backend\.env
          echo LOG_LEVEL=info >> backend\.env
        )
        echo "Environment file ready at backend\.env"

    - name: Stop existing containers
      run: |
        cd backend
        echo "Stopping existing containers..."
        docker-compose down --remove-orphans || true
        echo "Existing containers stopped"

    - name: Build and start containers
      run: |
        cd backend
        echo "Building and starting containers with Docker Compose..."
        docker-compose up -d --build
        echo "Containers started successfully"

    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to be ready..."
        timeout /t 45 /nobreak
        docker-compose logs backend

    - name: Health check backend
      run: |
        echo "Performing health check on backend..."
        $maxAttempts = 15
        $attempt = 1
        
        while ($attempt -le $maxAttempts) {
          try {
            $response = Invoke-WebRequest -Uri "http://localhost:3000/health" -Method GET -TimeoutSec 10
            if ($response.StatusCode -eq 200) {
              Write-Host "Backend health check passed on attempt $attempt"
              break
            }
          } catch {
            Write-Host "Backend health check failed on attempt $attempt: $($_.Exception.Message)"
          }
          
          if ($attempt -eq $maxAttempts) {
            Write-Host "Backend health check failed after $maxAttempts attempts"
            docker-compose logs backend
            exit 1
          }
          
          $attempt++
          Start-Sleep -Seconds 3
        }

    - name: Health check Redis (if enabled)
      run: |
        echo "Checking Redis connection..."
        try {
          docker exec kospi-redis redis-cli ping
          Write-Host "Redis is running"
        } catch {
          Write-Host "Redis check failed or Redis not enabled: $($_.Exception.Message)"
        }

    - name: Run database migrations
      run: |
        cd backend
        docker-compose exec -T backend npm run db:migrate || echo "Database migration failed or not needed"

    - name: Run basic tests
      run: |
        cd backend
        docker-compose exec -T backend npm run test:simple || echo "Tests failed but continuing deployment"

    - name: Display service status
      run: |
        echo "Service Status:"
        docker-compose ps
        echo ""
        echo "Backend Logs:"
        docker-compose logs backend --tail 30
        echo ""
        echo "Collector Logs:"
        docker-compose logs collector --tail 20 || echo "Collector not running"

    - name: Cleanup old images
      run: |
        echo "Cleaning up old Docker images..."
        docker image prune -f
        docker system prune -f

    - name: Deployment Summary
      run: |
        echo "=== Docker Compose Deployment Summary ==="
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Environment: ${{ github.event.inputs.environment || 'development' }}"
        echo "Runner: Windows"
        echo "Backend URL: http://localhost:3000"
        echo "Redis URL: redis://localhost:6379"
        echo "Environment Source: Local .env file"
        echo "Services:"
        docker-compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
        echo "========================================" 